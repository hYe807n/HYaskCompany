anaconda 홈페이지에서 설치
cmd 들어가서 ->  conda create --name askcompany python=3.7	@conda activate askcompany	@pip install "django~=3.0.0"
cmd -> condaactivate askcompany	@cd \	@mkdiv Dev	@cd Dev	@django-admin startproject askcompany	 @cd askcompany	@start . (폴더 위치 열기)
	@python manage.py migrate	@python manage.py createsuperuser	@python manage.py runserver
*vs code 내의 터미널 상단에 python Select interpreter 설정을 virtualenv로 설정
*vscode 터미널 powershell 말고 cmd로 설정

<<장고 모델 ORM>>
model 정의 -> 마이그레이션 파일 생성 (python manage.py makemigrations "appname") -> 마이크레이션 파일 적용 (python manage.py migrate) -> DB 확인

<<장고 admin>>
-모델 클래스 등록 (서비스 초기 관리 도구)
    앱/admin.py 에 모델 클래스 등록
        1) admin.site.register("클래스")
        2) class "클래스명"Admin(admin.ModelAdmin):
	   pass
           admin.site.register("클래스명", "클래스명"Admin)
-파이썬 장식자 @
어떤 모델이라도 랩핑
-list_display : 모델 리스트에 출력할 컬럼 지정
-list_fifter : 지정 필드값으로 필터링 옵션 제공

<<media 파일>>
-Media 파일
FileField/ImageField를 통해 저장한 모든 파일

<<Field 옵션>>
-blank 옵션 : 업로드 옵션처리 여부 (dafault: False)
-upload_to 옵션 : settings.MEDIA_ROOT 하위에서 저장한 파일명과 경로명 결정 (dafault: 파일명 그대로 settings.MEDIA_ROOT에 저장)

<<python shell>>
> python : 프로젝트 설정이 안 된 쉘 나옴
> python manage.py shell : 프로젝트 설정이 된 쉘 나옴 

<<모델을 통한 조회>>
-생성되는 대강의 sql 윤곽
    ModelCls.objects.all()	-> SELECT * FROM app_model
    ModelCls.objects.all().order_by('-id')[:10]	-> SELECT*FROM app_model ORDER BY id DESC LIMIT 10
    ModelCls.objects.create(title="New Title")	-> INSERT INTO app_model (title) VALUES("New Title")
    QuerySet : SQL을 생성해주는 인터페이스

<<QUERYSET 정렬 조건 추가>>
- 정렬 조건이 없으면 일괄된 순서 보장 받을 수 없음 
- DB에서 다수 필드에 대한 정렬을 지원하지만 단일 필드로 하는 것이 성능에 이익

1. 모델 클래스의 Meta 속성으로 ordering 설정
2. 모든 queryset에 order_by에 지정
*Post.objects.all()[1:3:2] -> step이 들어가는 순간 리스트가 반환 (default는 queryset)

<<django-debug-toolbar>>
-request/response에 대한 디버깅 정보 보여줌

<<관계를 표현하는 모델 필드(ForeignKey)>>
-1:N 관계 -> models.ForeignKey
-1:1 관계 -> models.OneToOneField
-M:N(태그와 포스팅) -> models.ManyToManyFeild 
    -ForeignKey(to, on_delete)
        -to 대상 모델: 클래스를 직접 지정 혹은 클래스명을 문자열로 지정
        -on_delete: Record 삭제 시 Rule
    -AUTH_USER_MODEL -> 올바른 User 모델 지정
    -FK에서의 reverse_name